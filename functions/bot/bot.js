const { 
    Telegraf,
Markup
} = require('telegraf');
    require('dotenv').config()
    const text = require('./const')



const bot = new Telegraf(process.env.BOT_TOKEN);
bot.start((ctx) => ctx.replyWithHTML(`–ü—Ä–∏–≤–µ—Ç ${ctx.message.from.first_name ? ctx.message.from.first_name : '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}! –î–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã <a href="/go">–Ω–∞–∂–º–∏—Ç–µ /go</a>`));
bot.help((ctx) => ctx.reply(text.commands));
bot.on('sticker', (ctx) => ctx.reply('üëç'));
// bot.on('message', (msg) => {
 // const chatId = msg.chat.id;

  // send a message to the chat acknowledging receipt of their message
//  bot.sendMessage(chatId, '–í–∏–∂—É —Å–æ–æ–±—â–µ–Ω–∏–µ');
// });
bot.command('joke', async (ctx) => ctx.replyWithHTML('–ì—Ä–∞–Ω–¥'));
bot.command('faq', async (ctx) => ctx.replyWithHTML(text.text));
bot.command('fsie', async (ctx) => {
      try {
        await ctx.replyWithPhoto({ source: 'functions/bot/img/1.png' });
        await ctx.replyWithHTML('<b>–ì—Ä–∞–Ω—Ç—ã –§–°–ò</b>', Markup.inlineKeyboard(
          [
            [Markup.button.callback('–°—Ç–∞—Ä—Ç-1', 'btn_start'),
            Markup.button.callback('–°—Ç–∞—Ä—Ç-–¶–¢', 'btn_startdt'),
            Markup.button.callback('–°—Ç–∞—Ä—Ç-–ò–ò', 'btn_startI')],
            [Markup.button.callback('–ê–∫—Å–µ–ª–µ—Ä–∞—Ü–∏—è', 'btn_axel')],
            [Markup.button.callback('–†–∞–∑–≤–∏—Ç–∏–µ', 'btn_grow')],
            [Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', 'btn_fsik')],
            [Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è-–¶–¢', 'btn_fsikdt')],
            [Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è-–ò–ò', 'btn_fsikii')], 
            [Markup.button.callback('–†–§–†–ò–¢', 'btn_rfr')], 
            [Markup.button.callback('–î—Ä—É–≥–æ–µ', 'btn_other2')]
          ]
        ))
      } catch (e) {
        console.error(e) }
})

// –ü–æ–¥–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã
bot.command('go', async (ctx) => {
  sendStartMessage(ctx);
})
bot.action('go', ctx => {
  ctx.deleteMessage(); 
  sendStartMessage(ctx);
})
function sendStartMessage(ctx){
  try {
    ctx.replyWithHTML('<b>–ö–∞–∫–æ–π –≤–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É –∫–ª–∏–µ–Ω—Ç–∞?</b>', Markup.inlineKeyboard(
      [
        [Markup.button.callback('–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ', 'btn_A')],
        [Markup.button.callback('IT', 'btn_B')],
        [Markup.button.callback('–ö–ª–∏–µ–Ω—Ç—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ', 'btn_C')],
        [Markup.button.callback('–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å', 'btn_D')]
      ]
    ))
  } catch (e) {
    console.error(e)
  }
}

// –†–∞–∑–¥–µ–ª 1 
// –°–µ–ª—å—Ö–æ–∑
function addActionBot27(id_btn, text) {
    bot.action('btn_A', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithPhoto({ source: 'functions/bot/img/agro1.jpg' });
 await ctx.replyWithHTML('<b>–£—Ç–æ—á–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∏—Ç–µ–ª—è</b>', Markup.inlineKeyboard(
          [
            [Markup.button.callback('–û–û–û', 'btn_A1')],
            [Markup.button.callback('–ò–ü/–ö–§–•', 'btn_A2')],
            [Markup.button.callback('–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤', 'btn_A3')],
            [Markup.button.callback('–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ', 'btn_A41')]
          ]
        ))
      } catch (e) {
        console.error(e)
      }
    })}
    function addActionBot23(id_btn, text) { 
bot.action('btn_A1', async (ctx) => {
          try {
            await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
              [
                [Markup.button.callback('–ê–≥—Ä–æ–ø—Ä–æ–≥—Ä–µ—Å—Å', 'btn_A11'), Markup.button.callback('–ê–≥—Ä–æ—Ç—É—Ä–∏–∑–º', 'btn_A12')]
              ]
            ))
          } catch (e) {
            console.error(e)
          }
})}
// –ê–≥—Ä–æ–ø—Ä–æ–≥—Ä–µ—Å—Å
function addActionBot1a(id_btn, exports, preview) {
  bot.action('btn_A11', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/grant-agroprogress.jpg' });
      await ctx.replyWithHTML(text.textA11, Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
          [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
        ))
        } catch (e) {
        console.error(e)
      }
    })
// –ê–≥—Ä–æ—Ç—É—Ä–∏–∑–º
bot.action('btn_A12', async (ctx) => {
try {
  await ctx.answerCbQuery()
  await ctx.replyWithPhoto({ source: 'functions/bot/img/agroturizm.jpg' });
  await ctx.replyWithHTML(text.textA12, Markup.inlineKeyboard(
    [
      [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
      [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
      [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
    ))
    } catch (e) {
    console.error(e)
  }
})}
function addActionBot2(id_btn, text) {
  bot.action('btn_A2', async (ctx) => {
    try {
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–°–µ–º–µ–π–Ω–∞—è –∂–∏–≤–æ—Ç–Ω–æ–≤–æ–¥—á–µ—Å–∫–∞—è —Ñ–µ—Ä–º–∞', 'btn_A21')], 
          [Markup.button.callback('–ê–≥—Ä–æ—Ç—É—Ä–∏–∑–º', 'btn_A22')]
        ]
      ))
    } catch (e) {
      console.error(e)
    }
})}
function addActionBot1(id_btn, exports, preview) {
// –°–µ–º–µ–π–Ω–∞—è –∂ —Ñ
      bot.action('btn_A21', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithPhoto({ source: 'functions/bot/img/semfarm.jpg' });
          await ctx.replyWithHTML(text.textA21, Markup.inlineKeyboard(
            [
              [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
              [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
              [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
            ))
            } catch (e) {
            console.error(e)
          }
        })
// –ê–≥—Ä–æ—Ç—É—Ä–∏–∑–º
bot.action('btn_A22', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/agroturizm.jpg' });
      await ctx.replyWithHTML(text.textA12, Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
          [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
        ))
        } catch (e) {
        console.error(e)
      }
    })}
function addActionBot10c(id_btn, exports, preview) {
  bot.action('btn_A3', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/agro_razv.jpg' });
      await ctx.replyWithHTML(`–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –†–∞–∑–≤–∏—Ç–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –±–∞–∑—ã`, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_D1')], [Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_D2')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ]))
      } catch (e) {
      console.error(e)
    }
  })

  bot.action('btn_D1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/pole_start1.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_D2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/agr.pdf'})
      } catch (e) {
        console.error(e)
      }})

    bot.action('btn_A41', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithPhoto({ source: 'functions/bot/img/agrostartap.jpg' });
        await ctx.replyWithHTML(text.textA41, Markup.inlineKeyboard(
          [
            [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')],
          ]
        ))
      } catch (e) {
        console.error(e)
      }})}
// –†–∞–∑–¥–µ–ª 2
// IT
// –£—Ç–æ—á–Ω–∏ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∏—Ç–µ–ª—è
function addActionBot1bY(id_btn, text) {
  bot.action('btn_B', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/dt.jpg' });
      await ctx.replyWithHTML('<b>–£—Ç–æ—á–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∏—Ç–µ–ª—è</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–û–û–û', 'btn_B1')],
          [Markup.button.callback('–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ/–ò–ü', 'btn_B2')],
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –û–û–û
// –ö–∞–∫ –¥–æ–ª–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Æ–õ?
  bot.action('btn_B1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–ö–∞–∫ –¥–æ–ª–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Æ–õ?</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ë–æ–ª—å—à–µ –≥–æ–¥–∞', 'btn_B11')],
          [Markup.button.callback('–ú–µ–Ω—å—à–µ –≥–æ–¥–∞', 'btn_B12')],
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –§–õ/–ò–ü
  bot.action('btn_B2', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/start.jpg' });
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –°—Ç–∞—Ä—Ç</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–°—Ç–∞—Ä—Ç-1', 'btn_start')],
          [Markup.button.callback('–°—Ç–∞—Ä—Ç-–¶–¢', 'btn_startdt')],
          [Markup.button.callback('–°—Ç–∞—Ä—Ç-–ò–ò', 'btn_startI')],
          [Markup.button.callback('–ê–∫—Å–µ–ª–µ—Ä–∞—Ü–∏—è', 'btn_axel')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
// –ë–æ–ª—å—à–µ –≥–æ–¥–∞
  bot.action('btn_B11', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'btn_B111')],
          [Markup.button.callback('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'btn_B112')],
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –ú–µ–Ω—å—à–µ –≥–æ–¥–∞
bot.action('btn_B12', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
        [
            [Markup.button.callback('–°—Ç–∞—Ä—Ç-1', 'btn_start')],
            [Markup.button.callback('–°—Ç–∞—Ä—Ç-–¶–¢', 'btn_startdt')],
            [Markup.button.callback('–°—Ç–∞—Ä—Ç-–ò–ò', 'btn_startI')],
            [Markup.button.callback('–ê–∫—Å–µ–ª–µ—Ä–∞—Ü–∏—è', 'btn_axel')],
            [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
  bot.action('btn_B111', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–†–∞–∑–≤–∏—Ç–∏–µ', 'btn_grow')],
          [Markup.button.callback('–î—Ä—É–≥–æ–µ', 'btn_other2')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏
  bot.action('btn_B112', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
                [[Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', 'btn_fsik'),
          Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è-–¶–¢', 'btn_fsikdt'),
          Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è-–ò–ò', 'btn_fsikii')], 
          [Markup.button.callback('–†–§–†–ò–¢', 'btn_rfr'), 
          Markup.button.callback('–î—Ä—É–≥–æ–µ', 'btn_other1')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
}
// –†–∞–∑–¥–µ–ª 3
// –ö—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ
function addActionBotC(id_btn, text) {
  bot.action('btn_C', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/loan.jpg' });
      await ctx.replyWithHTML('<b>–ö—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ –ø–æ–¥ –∫–∞–∫–∏–µ —Ü–µ–ª–∏?</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–¢–æ–ª—å–∫–æ –ø–æ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–ª–∏', 'btn_C1')],
          [Markup.button.callback('–ù–∞ –ª—é–±—ã–µ —Ü–µ–ª–∏', 'btn_C2')],
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })}
// –ö—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ –ø–æ–¥ –∫–∞–∫–∏–µ —Ü–µ–ª–∏?
// –¢–æ–ª—å–∫–æ –ø–æ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–ª–∏. –ú–°–ü –ë–∞–Ω–∫
function addActionBot–°1(id_btn, exports, preview) {
  bot.action('btn_C1', async (ctx) => {
   // ctx.deleteMessage();
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/loan1.jpg' });
      await ctx.replyWithHTML(text.textC1, Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
          [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
        ))
        } catch (e) {
        console.error(e)
      }
    })
// –ù–∞ –ª—é–±—ã–µ —Ü–µ–ª–∏. –ë–∞–Ω–∫ –ö–∞–∑–∞–Ω–∏
bot.action('btn_C2', async (ctx) => {
  // ctx.deleteMessage();
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithPhoto({ source: 'functions/bot/img/loan2.jpg' });
    await ctx.replyWithHTML(text.textC2, Markup.inlineKeyboard(
      [
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
}
// –†–∞–∑–¥–µ–ª 4
// –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å
// –£—Ç–æ—á–Ω–∏ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∏—Ç–µ–ª—è
function addActionBot1b(id_btn, text) {
  bot.action('btn_D', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/c3.jpg' });
      await ctx.replyWithHTML('<b>–£—Ç–æ—á–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∏—Ç–µ–ª—è</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–û–û–û', 'btn_00u')],
          [Markup.button.callback('–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ/–ò–ü', 'btn_01u')],
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –û–û–û
// –ö–∞–∫–æ–π –æ–±—ä–µ–º –≤—ã—Ä—É—á–∫–∏ —É –∫–æ–º–ø–∞–Ω–∏–∏?
  bot.action('btn_00u', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–ö–∞–∫–æ–π –æ–±—ä–µ–º –≤—ã—Ä—É—á–∫–∏ —É –∫–æ–º–ø–∞–Ω–∏–∏?</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ú–µ–Ω–µ–µ 30 –º–ª–Ω', 'btn_D1u')],
          [Markup.button.callback('–ë–æ–ª–µ–µ 30 –º–ª–Ω', 'btn_D2u')],
          [Markup.button.callback('–ë–æ–ª–µ–µ 800 –º–ª–Ω', 'btn_D3u')]
        ]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –§–õ/–ò–ü
  bot.action('btn_01u', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/start.jpg' });
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –°—Ç–∞—Ä—Ç</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–°—Ç–∞—Ä—Ç-1', 'btn_start')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
// –ú–µ–Ω–µ–µ 30 –º–ª–Ω
bot.action('btn_D1u', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
      [
        [Markup.button.callback('–°—Ç–∞—Ä—Ç', 'btn_start')],
        [Markup.button.callback('–ê–∫—Å–µ–ª–µ—Ä–∞—Ü–∏—è', 'btn_axel')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
    ))
  } catch (e) {
    console.error(e)
  }
})

// –ë–æ–ª–µ–µ 30 –º–ª–Ω
bot.action('btn_D2u', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞</b>', Markup.inlineKeyboard(
      [
        [Markup.button.callback('–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'btn_d121')],
        [Markup.button.callback('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏', 'btn_d122')],
      ]
    ))
  } catch (e) {
    console.error(e)
  }
})
// –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
  bot.action('btn_d121', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–°—Ç–∞—Ä—Ç', 'btn_start')],
          [Markup.button.callback('–†–∞–∑–≤–∏—Ç–∏–µ', 'btn_grow')],
          [Markup.button.callback('–î—Ä—É–≥–æ–µ', 'btn_other2')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏
  bot.action('btn_d122', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
        [
          [Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', 'btn_fsik')],
          [Markup.button.callback('–î—Ä—É–≥–æ–µ', 'btn_other1')],
          [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
    } catch (e) {
      console.error(e)
    }
  })
// –ë–æ–ª–µ–µ 800 –º–ª–Ω
bot.action('btn_D3u', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithHTML('<b>–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>', Markup.inlineKeyboard(
      [
        [Markup.button.callback('–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', 'btn_fsik')],
        [Markup.button.callback('–§–†–ü', 'btn_frp')],
        [Markup.button.callback('–ú–∏–Ω–ø—Ä–æ–º—Ç–æ—Ä–≥', 'btn_mpt')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ]
    ))
  } catch (e) {
    console.error(e)
  }
})
}
// –°—Ç–∞—Ä—Ç
function addActionBot0a(id_btn, exports, preview) {
  bot.action('btn_start', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/start.jpg' });
      await ctx.replyWithHTML(text.textStart, Markup.inlineKeyboard([[Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_start1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_start2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_start3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })

  bot.action('btn_start1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/pole_start1.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_start2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –°—Ç–∞—Ä—Ç-1.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_start3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/02_–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¢–ó.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/03_–ó–∞–ø—Ä–æ—Å_–º–∞—Ä–∫–µ—Ç–∏–Ω–≥.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –°—Ç–∞—Ä—Ç-–¶–¢
function addActionBot0b(id_btn, exports, preview) {
  bot.action('btn_startdt', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/start.jpg' });
      await ctx.replyWithHTML(text.textStart, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_start1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_start2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_start3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })

  bot.action('btn_start1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/pole_start1.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_start2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –°—Ç–∞—Ä—Ç-1.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_start3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/02_–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¢–ó.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/03_–ó–∞–ø—Ä–æ—Å_–º–∞—Ä–∫–µ—Ç–∏–Ω–≥.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –°—Ç–∞—Ä—Ç-–ò–ò
function addActionBot0c(id_btn, exports, preview) {
  bot.action('btn_startii', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/start.jpg' });
      await ctx.replyWithHTML(text.textStart, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_start1')], [Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_start2')]],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_start3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ))
      } catch (e) {
      console.error(e)
    }
  })

  bot.action('btn_start1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/pole_start1.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_start2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –°—Ç–∞—Ä—Ç-1.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_start3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/02_–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¢–ó.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/03_–ó–∞–ø—Ä–æ—Å_–º–∞—Ä–∫–µ—Ç–∏–Ω–≥.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –ê–∫—Å–µ–ª–µ—Ä–∞—Ü–∏—è
bot.action('btn_axel', async (ctx) => ctx.replyWithHTML('–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'));

// –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function addActionBot0k1(id_btn, exports, preview) {
  bot.action('btn_fsik', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/kom.jpg' });
      await ctx.replyWithHTML(text.textKom, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_kom1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_kom2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_kom3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¶–¢
function addActionBot0k2(id_btn, exports, preview) {
  bot.action('btn_fsikdt', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/kom.jpg' });
      await ctx.replyWithHTML(text.textKom, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_kom1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_kom2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_kom3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò
function addActionBot0k3(id_btn, exports, preview) {
  bot.action('btn_fsikii', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/kom.jpg' });
      await ctx.replyWithHTML(text.textKom, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_kom1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_kom2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_kom3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –†–∞–∑–≤–∏—Ç–∏–µ
function addActionBotGr(id_btn, exports, preview) {
  bot.action('btn_grow', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/grow.jpg' });
      await ctx.replyWithHTML(text.textGrow, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_gr1'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_gr2'),
        Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_gr3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_gr1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_gr2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_gr3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –§–†–ü
function addActionBot1d(id_btn, exports, preview) {
  bot.action('btn_frp', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/frp.jpg' });
      await ctx.replyWithHTML(text.textFrp, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1')], [Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')]],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_kom1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_kom2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_kom3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –ú–∏–Ω–ü—Ä–æ–º–¢–æ—Ä–≥
function addActionBot2d(id_btn, exports, preview) {
  bot.action('btn_mpt', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/mpt.jpg' });
      await ctx.replyWithHTML(text.textMrp, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_kom1')], [Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_kom2')]],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_kom3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_kom1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_kom2', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_kom3', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
}
// –†–§–†–ò–¢
function addActionBotRR(id_btn, exports, preview) {
  bot.action('btn_rfr', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/rfr.jpg' });
      await ctx.replyWithHTML('–ú–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏', Markup.inlineKeyboard([
        [Markup.button.callback('–í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –ò–¢-—Ä–µ—à–µ–Ω–∏–π','btn_rfr1')], [Markup.button.callback('–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ò–¢-—Ä–µ—à–µ–Ω–∏–π','btn_rfr2')],
        [Markup.button.callback('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –ú–°–ü', 'btn_rfr3')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
      ]
      ))
      } catch (e) {
      console.error(e)
    }
  })
// –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –ò–¢-—Ä–µ—à–µ–Ω–∏–π
  bot.action('btn_rfr1', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithPhoto({ source: 'functions/bot/img/rfr.jpg' });
      await ctx.replyWithHTML(text.textRfr1, Markup.inlineKeyboard([
        [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_rfrA'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_rfrB')],
        [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_rfrC')],
        [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
      ))
      } catch (e) {
      console.error(e)
    }
  })
  bot.action('btn_rfrA', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_rfrB', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
      } catch (e) {
        console.error(e)
      }})
      bot.action('btn_rfrC', async (ctx) => {
        try {
          await ctx.answerCbQuery()
          await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
          await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
        } catch (e) {
          console.error(e)
        }})
// –ì—Ä–∞–Ω—Ç –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ò–¢-—Ä–µ—à–µ–Ω–∏–π
bot.action('btn_rfr2', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithPhoto({ source: 'functions/bot/img/rfr.jpg' });
    await ctx.replyWithHTML(text.textRfr2, Markup.inlineKeyboard([
      [Markup.button.callback('–ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É','btn_rfrD'), Markup.button.callback('–ê–Ω–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É','btn_rfrE')],
      [Markup.button.callback('–ü–µ—Ä–µ—á–µ–Ω—å —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å', 'btn_rfrF')],
      [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]]
    ))
    } catch (e) {
    console.error(e)
  }
})
bot.action('btn_rfrD', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–æ–ª–æ–∂–µ–Ω–∏–µ_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_18_–Ω–∞_—Å–∞–∏ÃÜ—Ç.pdf'})
  } catch (e) {
    console.error(e)
  }})
  bot.action('btn_rfrE', async (ctx) => {
    try {
      await ctx.answerCbQuery()
      await ctx.replyWithDocument( { source: 'functions/bot/docs/–ê–Ω–∫–µ—Ç–∞ –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'})
    } catch (e) {
      console.error(e)
    }})
    bot.action('btn_rfrF', async (ctx) => {
      try {
        await ctx.answerCbQuery()
        await ctx.replyWithDocument( { source: 'functions/bot/docs/01_–î–æ—Ä–æ–∂–Ω–∞—è_–∫–∞—Ä—Ç–∞_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è.docx'}),
        await ctx.replyWithDocument( { source: 'functions/bot/docs/04_–ê–Ω–∫–µ—Ç–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–∞–ö–æ–º–º.xlsx'}),
        await ctx.replyWithDocument( { source: 'functions/bot/docs/2_–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ_–Ω–æ–≤.docx'}),
        await ctx.replyWithDocument( { source: 'functions/bot/docs/–ü–µ—Ä–µ—á–µ–Ω—å_–ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_‚Äî_–∫–æ–ø–∏—è.docx'}),
        await ctx.replyWithDocument( { source: 'functions/bot/docs/3_–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥_–Ω–æ–≤.xlsx'})
      } catch (e) {
        console.error(e)
      }})
// –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –º–∞–ª–æ–≥–æ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
bot.action('btn_rfr3', async (ctx) => {
  try {
    await ctx.answerCbQuery()
    await ctx.replyWithPhoto({ source: 'functions/bot/img/kom.jpg' });
    await ctx.replyWithHTML(text.textKom3, Markup.inlineKeyboard(
     [Markup.button.callback('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞', 'go')]
    ))
    } catch (e) {
    console.error(e)
  }
})
}
// –î—Ä—É–≥–æ–µ1
bot.action('btn_other1', async (ctx) => ctx.replyWithHTML('–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'));
// –î—Ä—É–≥–æ–µ2
bot.action('btn_other2', async (ctx) => ctx.replyWithHTML('–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'));






// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π
addActionBot27('btn_A', text)
addActionBot23('btn_A1', text)
addActionBot2('btn_A2', text)
addActionBot1a('btn_A11', text.textA11, true)
addActionBot1a('btn_A12', text.textA12, true)
addActionBot1('btn_A21', text.textA21, true)
addActionBot1('btn_A22', text.textA12, true)
addActionBot10c('btn_A3', text.textA3, true)
addActionBot10c('btn_A41', text.textA41, true)
// 2 —Ä–∞–∑–¥–µ–ª 
addActionBot1bY('btn_B', text)
addActionBot1bY('btn_B1', text)
addActionBot1bY('btn_B2', text)
addActionBot1b('btn_B11', text)
addActionBot1b('btn_B12', text)
addActionBot1b('btn_B111', text)
addActionBot1b('btn_B112', text)
addActionBot0a('btn_start', text, true)
addActionBot0a('btn_start1', text.textStart, true)
addActionBot0b('btn_startdt', text.textStart, true)
addActionBot0c('btn_startii', text.textStart, true)
addActionBot0k1('btn_fsik', text.textKom, true)
addActionBot0k2('btn_fsikdt', text.textKom, true)
addActionBot0k3('btn_fsikii', text.textKom, true)
addActionBotRR('btn_rfr', text, true)
addActionBotRR('btn_rfr1', text.textRfr1, true)
addActionBotRR('btn_rfr2', text.textRfr2, true)
addActionBotRR('btn_rfr3', text.textRfr2, true)
addActionBotGr('btn_grow', text.textGrow, true)
// 3 —Ä–∞–∑–¥–µ–ª
addActionBotC('btn_–°', text)
addActionBot–°1('btn_–°1', text.text–°1, true)
addActionBot–°1('btn_–°2', text.text–°2, true)
// 4 —Ä–∞–∑–¥–µ–ª
addActionBot1d('btn_frp', text.textFrp, true)
addActionBot2d('btn_mpt', text.textMrp, true)


// AWS event handler syntax (https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html)
exports.handler = async event => {
  try {
    await bot.handleUpdate(JSON.parse(event.body))
    return { statusCode: 200, body: "" }
  } catch (e) {
    console.error("error in handler:", e)
    return { statusCode: 400, body: "This endpoint is meant for bot and telegram communication" }
  }
}

bot.launch();

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
